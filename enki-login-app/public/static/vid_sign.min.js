"use strict";function VirtuousID(n){this.web3js=null,"undefined"!=typeof web3?this.web3js=new Web3(web3.currentProvider):(console.log("No web3? You should consider trying MetaMask!"),this.web3js=new Web3(new Web3.providers.HttpProvider("https://rinkeby.infura.io/"))),this._context={domain:n},this.ETH_NETWORKS={1:"Mainnet",2:"Morden",3:"Ropsten",4:"Rinkeby",42:"Kovan"};var e=this;VirtuousID.prototype.fetchNetworkId=function(){return new Promise(function(n,t){e.web3js.version.getNetwork(function(o,r){return o?(e._context.netId=null,t(o)):(e._context.netId=r,n(r))})})},VirtuousID.prototype.cachedAccounts=function(){return e._context.accounts},VirtuousID.prototype.fetchAccounts=function(){return new Promise(function(n,t){e.web3js.eth.getAccounts(function(e,o){return e?t(e):n(o)})}).then(function(n){e._context.accounts=n,console.log("Got accounts: "),console.log(n)}).catch(function(n){alert("Could not fetch accounts!"),console.log(n),e._context.accounts=null})},VirtuousID.prototype.getBalance=function(n){return new Promise(function(t,o){e.web3js.eth.getBalance(n,function(e,t){if(!e){var r=t.toNumber()/1e18;return console.log("Balance for the account "+n+" is "+r),r}console.error(e),o(e)})})},VirtuousID.prototype.startApp=function(){return VirtuousID.prototype.fetchNetworkId().catch(function(n){alert("Could not retrieve Network ID!")}).then(function(n){return VirtuousID.prototype.fetchAccounts().then(function(e){return{netId:n,accounts:e}})})},VirtuousID.prototype.getServerNonce=function(){return axios.get("/nonce").then(function(n){return n.data}).catch(function(n){return alert("Could not obtain nonce from the server"),console.log(n),null})},VirtuousID.prototype.prepareBaseMsg=function(n,t){return VirtuousID.prototype.getServerNonce().then(function(o){var r=uuidv4(),i=+new Date,a={netId:e._context.netId,domain:e._context.domain,intent:t,serverNonce:o.serverNonce,serverEpoch:o.serverEpoch,clientNonce:r,clientEpoch:i,email:n.email};return console.log(a),{acct:n.acct,rawObj:a}})},VirtuousID.prototype.prepareSignupMsg=function(n){return VirtuousID.prototype.prepareBaseMsg(n,"SIGNUP").then(function(e){e.url="/signup",e.rawObj.fullName=n.fullName;var t=e.rawObj.netId+e.rawObj.domain+e.rawObj.intent+e.rawObj.serverNonce+e.rawObj.serverEpoch+e.rawObj.clientNonce+e.rawObj.clientEpoch+e.rawObj.email+e.rawObj.fullName;return e.msg=t,e})},VirtuousID.prototype.prepareLoginMsg=function(n){return VirtuousID.prototype.prepareBaseMsg(n,"LOGIN").then(function(n){n.url="/login";var e=n.rawObj.netId+n.rawObj.domain+n.rawObj.intent+n.rawObj.serverNonce+n.rawObj.serverEpoch+n.rawObj.clientNonce+n.rawObj.clientEpoch+n.rawObj.email;return n.msg=e,n})},VirtuousID.prototype.signMessage=function(n){var t="0x"+keccak256(n.msg);return axios.defaults.headers["Content-Type"]="application/vnd.api+json",axios.defaults.headers.Accept="application/vnd.api+json",new Promise(function(o,r){e.web3js.eth.sign(n.acct,t,function(n,e){return n?(alert(n),r(n)):o(e)})}).then(function(e){console.log("Sending the signature: "+e);var t={acct:n.acct,rawObj:n.rawObj,signature:e};return axios.post(n.url,t,{headers:{"Content-Type":"application/json;charset=UTF-8"}}).then(function(e){console.log(e),alert("Response from "+n.url+": "+JSON.stringify(e.data))}).catch(function(n){alert("Could not send the signed message"),console.log(n)})})}}function populateNetworkId(n){var e,t=window.vidIdApp.ETH_NETWORKS;switch(n){case"1":e="You are on the "+t[n]+".";break;case"2":case"3":case"4":case"42":e="You are on the "+t[n]+" test network.";break;default:e="This is an unknown network with ID = "+n+"."}return $("#network-watcher").text(e),console.log(e),{netId:n,netIdMsg:e}}function populateAccountMenu(n){var e=window.vidIdApp.cachedAccounts();if(null===e||void 0===e||0===e.length)return alert("No accounts to log in! Create or import one first."),null;var t=$("#"+n),o=$("#"+n+" .cst-input-vid-addr").first();return o.empty(),e.map(function(n){o.append('<option value="'+n+'">'+n+"</option>")}),t}function showSignupModal(){var n=populateAccountMenu("modal-signup");if(null===n||void 0===n)return!1;n.modal("show")}function showLoginModal(){var n=populateAccountMenu("modal-login");if(null===n||void 0===n)return!1;n.modal("show")}function extractRawBaseObj(n){var e=$("#"+n+" .cst-input-email").first().prop("value"),t=$("#"+n+" .cst-input-vid-addr").first(),o=t.prop("selectedIndex")||0;return{email:e,acct:t.children()[o].value}}function dismissSignupModal(){$("#modal-signup-form").trigger("reset"),$("#modal-signup").modal("hide")}function dismissLoginModal(){$("#modal-login-form").trigger("reset"),$("#modal-login").modal("hide")}function performSignup(){var n="modal-signup",e=$("#"+n);if(null===e||void 0===e)return!1;var t=extractRawBaseObj(n);t.fullName=$("#"+n+" .cst-input-full-name").first().prop("value"),window.vidIdApp.prepareSignupMsg(t).then(window.vidIdApp.signMessage).then(function(n){dismissSignupModal()}).catch(function(n){alert("Could not sign the message!")})}function performLogin(){var n="modal-login",e=$("#"+n);if(null===e||void 0===e)return!1;var t=extractRawBaseObj(n);window.vidIdApp.prepareLoginMsg(t).then(window.vidIdApp.signMessage).then(function(n){dismissLoginModal()}).catch(function(n){alert("Could not sign the message!")})}window.addEventListener("load",function(){window.vidIdApp=new VirtuousID("visc.network"),window.vidIdApp.startApp().then(function(n){var e=n.netId;n.accounts;populateNetworkId(e)})});
